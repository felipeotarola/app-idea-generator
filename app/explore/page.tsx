"use client"

import { useEffect, useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import Link from "next/link"
import { ArrowLeft, Loader2, Sparkles } from "lucide-react"
import { getPublicIdeas } from "@/lib/supabase-client"
import NavBar from "@/components/nav-bar"

// Helper function to format idea text
function formatSavedIdea(ideaText: string) {
  // Extract app name if it exists
  const appNameMatch = ideaText.match(/App Name:?\s*([^\n]+)/i)
  const appName = appNameMatch ? appNameMatch[1].trim() : "App Idea"

  // Format the content
  const formattedContent = ideaText
    .split(/\n+/)
    .map((line, index) => {
      // Check if line has a label
      const labelMatch = line.match(/^([^:]+):\s*(.+)$/)

      if (labelMatch && index > 0) {
        // Skip the app name for labels
        const [, label, content] = labelMatch
        return (
          <div key={index} className="mb-3">
            <h4 className="text-pink-300 font-semibold">{label}</h4>
            <p>{content.trim()}</p>
          </div>
        )
      }

      // If no label and not app name, just render as paragraph
      if (index > 0 || !appNameMatch) {
        return (
          <p key={index} className="mb-2">
            {line}
          </p>
        )
      }

      return null
    })
    .filter(Boolean)

  return { appName, formattedContent }
}

export default function ExplorePage() {
  const [ideas, setIdeas] = useState<any[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchIdeas = async () => {
      try {
        const data = await getPublicIdeas(100) // Get up to 100 ideas
        setIdeas(data || [])
      } catch (error) {
        console.error("Error fetching public ideas:", error)
      } finally {
        setLoading(false)
      }
    }

    fetchIdeas()
  }, [])

  return (
    <main className="min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-fuchsia-900 p-4">
      <NavBar />
      <div className="max-w-4xl mx-auto pt-16">
        <div className="mb-8 flex justify-between items-center">
          <div>
            <Link href="/">
              <Button variant="ghost" className="text-white hover:bg-white/10">
                <ArrowLeft className="h-4 w-4 mr-2" />
                Back to Generator
              </Button>
            </Link>
          </div>
          <Link href="/">
            <Button className="bg-gradient-to-r from-pink-500 to-violet-500 hover:from-pink-600 hover:to-violet-600">
              <Sparkles className="h-4 w-4 mr-2" />
              Generate New Idea
            </Button>
          </Link>
        </div>

        <h1 className="text-3xl md:text-4xl font-bold text-white mb-8">Explore App Ideas</h1>
        <p className="text-white/70 mb-8">
          Browse through app ideas generated by the community. Find inspiration for your next project!
        </p>

        {loading ? (
          <div className="flex justify-center py-12">
            <Loader2 className="h-8 w-8 animate-spin text-white" />
          </div>
        ) : ideas.length > 0 ? (
          <div className="grid gap-6">
            {ideas.map((idea) => (
              <Card key={idea.id} className="bg-black/30 border-purple-500/30 backdrop-blur-sm">
                <CardHeader className="pb-2">
                  <div className="flex justify-between items-center">
                    <CardTitle className="text-white text-lg">{formatSavedIdea(idea.idea_text).appName}</CardTitle>
                    <span className="text-xs text-white/60">{new Date(idea.created_at).toLocaleDateString()}</span>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="text-white/90 space-y-1">{formatSavedIdea(idea.idea_text).formattedContent}</div>
                </CardContent>
              </Card>
            ))}
          </div>
        ) : (
          <Card className="bg-black/30 border-purple-500/30 backdrop-blur-sm">
            <CardContent className="p-6">
              <p className="text-white/70 text-center py-8">
                No ideas have been generated yet. Be the first to create some!
              </p>
            </CardContent>
          </Card>
        )}
      </div>
    </main>
  )
}
